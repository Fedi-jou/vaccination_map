{"version":3,"sources":["Context/CoorContext.js","Context/VacContext.js","Components/map1.js","App.js","reportWebVitals.js","index.js"],"names":["CoorContext","createContext","CoorProvider","children","useState","data","setData","useEffect","a","axios","get","then","response","getdata","Provider","value","VacContext","VacProvider","data1","setData1","mapboxgl","accessToken","Map","useContext","tooltipData","setTooltipData","width","height","latitude","longitude","zoom","viewport","setViewport","listner","e","key","window","addEventListener","removeEventListener","mapStyle","mapboxApiAccessToken","onViewportChange","nextViewport","map","item","className","countryInfo","lat","long","style","onClick","console","log","anchor","closeButton","onClose","src","flag","alt","country","Object","values","timeline","i","JSON","stringify","toLocaleString","population","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.eeea7086.chunk.js","sourcesContent":["import React, { useState, useEffect, createContext } from \"react\";\r\nimport axios from \"axios\";\r\nconst URL = \"https://disease.sh/v3/covid-19/countries\";\r\n\r\nexport const CoorContext = createContext();\r\nexport const CoorProvider = ({ children }) => {\r\n  const [data, setData] = useState();\r\n  useEffect(() => {\r\n    const getdata = async () => {\r\n      await axios.get(URL).then((response) => {\r\n        setData(response.data);\r\n      });\r\n    };\r\n    getdata();\r\n    // eslint-disable-next-line\r\n  }, []);\r\n  return (\r\n    <CoorContext.Provider value={{ data }}>{children}</CoorContext.Provider>\r\n  );\r\n};\r\n","import React, { useState, useEffect, createContext } from \"react\";\r\nimport axios from \"axios\";\r\nconst URL =\r\n  \"https://disease.sh/v3/covid-19/vaccine/coverage/countries?lastdays=1&fullData=false\";\r\n\r\nexport const VacContext = createContext();\r\nexport const VacProvider = ({ children }) => {\r\n  const [data1, setData1] = useState();\r\n  useEffect(() => {\r\n    const getdata = async () => {\r\n      await axios.get(URL).then((response) => {\r\n        setData1(response.data);\r\n      });\r\n    };\r\n    getdata();\r\n  }, []);\r\n  return (\r\n    <VacContext.Provider value={{ data1 }}>{children}</VacContext.Provider>\r\n  );\r\n};\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport ReactMapGL, { Marker, Popup } from \"react-map-gl\";\r\nimport \"./map1.css\";\r\nimport { CoorContext } from \"../Context/CoorContext\";\r\nimport { VacContext } from \"../Context/VacContext\";\r\nimport mapboxgl from \"!mapbox-gl\"; // eslint-disable-line import/no-webpack-loader-syntax\r\nmapboxgl.accessToken =\r\n  \"pk.eyJ1Ijoiam91ZiIsImEiOiJja3NydHRxbGwwaXZ0MnBwbmltcmZ1NmM1In0.Y4S9nBOCRVlxW50Iq_0BFQ\";\r\n\r\nfunction Map() {\r\n  const { data } = useContext(CoorContext);\r\n  const { data1 } = useContext(VacContext);\r\n  const [tooltipData, setTooltipData] = useState();\r\n  const [viewport, setViewport] = useState({\r\n    width: \"100vw\",\r\n    height: \"100vh\",\r\n    latitude: 0,\r\n    longitude: 0,\r\n    zoom: 2.5,\r\n  });\r\n\r\n  useEffect(() => {\r\n    const listner = (e) => {\r\n      if (e.key === \"Escape\") {\r\n        setTooltipData(null);\r\n      }\r\n    };\r\n    window.addEventListener(\"keydown\", listner);\r\n    return () => {\r\n      window.removeEventListener(\"keydown\", listner);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <h1>helloo</h1>\r\n      </div>\r\n      <ReactMapGL\r\n        {...viewport}\r\n        mapStyle=\"mapbox://styles/jouf/cksruy2272mlv17qhkk94xpsd\"\r\n        mapboxApiAccessToken=\"pk.eyJ1Ijoiam91ZiIsImEiOiJja3NydHRxbGwwaXZ0MnBwbmltcmZ1NmM1In0.Y4S9nBOCRVlxW50Iq_0BFQ\"\r\n        onViewportChange={(nextViewport) => setViewport(nextViewport)}\r\n      >\r\n        {data &&\r\n          data.map((item, key) => (\r\n            <Marker\r\n              className=\"map-marker\"\r\n              key={key}\r\n              latitude={item.countryInfo.lat}\r\n              longitude={item.countryInfo.long}\r\n            >\r\n              <div\r\n                style={{ height: 15, width: 15 }}\r\n                className=\"map-marker\"\r\n                onClick={() => setTooltipData(item)}\r\n              ></div>\r\n              {console.log(tooltipData, \"hello\")}\r\n            </Marker>\r\n          ))}\r\n        {tooltipData && (\r\n          <Popup\r\n            latitude={tooltipData.countryInfo.lat}\r\n            longitude={tooltipData.countryInfo.long}\r\n            anchor=\"bottom\"\r\n            closeButton={true}\r\n            onClose={() => setTooltipData(null)}\r\n          >\r\n            <div className=\"tooltip-card\">\r\n              <div className=\"tooltip-header\">\r\n                <img\r\n                  className=\"tooltip-img\"\r\n                  src={tooltipData.countryInfo.flag}\r\n                  alt=\"\"\r\n                ></img>\r\n                {tooltipData.country}\r\n              </div>\r\n              <div className=\"tooltip-content\">\r\n                <div className=\"content-row\">\r\n                  <div className=\"small heading text-secondary me-2\">\r\n                    Total doses given :\r\n                  </div>\r\n                  <div className=\"h6 heading\">\r\n                    {data1 &&\r\n                      data1.map((item) => (\r\n                        <>\r\n                          {Object.values(item.timeline).map((i) => (\r\n                            <>\r\n                              {JSON.stringify(item.country) ===\r\n                              JSON.stringify(tooltipData.country) ? (\r\n                                <div>{i.toLocaleString()}</div>\r\n                              ) : null}\r\n                            </>\r\n                          ))}\r\n                        </>\r\n                      ))}\r\n                  </div>\r\n                </div>\r\n                <div className=\"content-row\">\r\n                  <div className=\"small heading text-secondary me-2\">\r\n                    Total Population :\r\n                  </div>\r\n                  <div className=\"h6 heading\">\r\n                    {tooltipData.population.toLocaleString()}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </Popup>\r\n        )}\r\n      </ReactMapGL>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Map;\r\n","import \"./App.css\";\nimport React from \"react\";\nimport Map from \"./Components/map1\";\nimport { VacProvider } from \"./Context/VacContext\";\nimport { CoorProvider } from \"./Context/CoorContext\";\nimport mapboxgl from \"!mapbox-gl\"; // eslint-disable-line import/no-webpack-loader-syntax\n\nmapboxgl.accessToken =\n  \"pk.eyJ1Ijoiam91ZiIsImEiOiJja3NydHRxbGwwaXZ0MnBwbmltcmZ1NmM1In0.Y4S9nBOCRVlxW50Iq_0BFQ\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <VacProvider>\n        <CoorProvider>\n          <Map />\n        </CoorProvider>\n      </VacProvider>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}